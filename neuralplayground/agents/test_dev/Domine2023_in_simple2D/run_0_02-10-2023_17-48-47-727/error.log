wandb: Currently logged in as: clementinedomine (graph-brain). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.15.11
wandb: Run data is saved locally in /Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/agents/wandb/run-20231002_174850-sxnv4fj2
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run Grid_shortest_path02Oct_17_48
wandb: ‚≠êÔ∏è View project at https://wandb.ai/graph-brain/graph-brain
wandb: üöÄ View run at https://wandb.ai/graph-brain/graph-brain/runs/sxnv4fj2
Traceback (most recent call last):
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/agents/run_back.py", line 75, in <module>
    if __name__ == "__main__":
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/agents/run_back.py", line 65, in main
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/backend/simulation_manager.py", line 130, in run_all
    self._logged_run(sim, sim_path)
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/backend/simulation_manager.py", line 199, in _logged_run
    sim.run_sim(save_path=sim_path)
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/backend/simulation_manager.py", line 319, in run_sim
    trained_agent, trained_env, training_hist = self.training_loop(agent, env, **self.training_loop_params)
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/backend/training_loops.py", line 35, in default_training_loop
    update_output = agent.update()
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/agents/domine_2023.py", line 214, in update
    graph_test, target_test = sample_padded_grid_batch_shortest_path(
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/agents/domine_2023_extras/class_Graph_generation.py", line 68, in sample_padded_grid_batch_shortest_path
    nx_weighted = convert_jraph_to_networkx_graph(graph, 0)
  File "/Users/clementine/Documents/UCL/NeuralPlayground/neuralplayground/agents/domine_2023_extras/class_Graph_generation.py", line 138, in convert_jraph_to_networkx_graph
    edge_feature=edges[edges_padd + e],
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/array.py", line 319, in __getitem__
    return lax_numpy._rewriting_take(self, idx)
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/numpy/lax_numpy.py", line 4276, in _rewriting_take
    if (result := _attempt_rewriting_take_via_slice(arr, idx, mode)) is not None:
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/numpy/lax_numpy.py", line 4253, in _attempt_rewriting_take_via_slice
    arr = lax.slice(
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/lax/slicing.py", line 105, in slice
    return slice_p.bind(operand, start_indices=tuple(start_indices),
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/core.py", line 386, in bind
    return self.bind_with_trace(find_top_trace(args), args, params)
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/core.py", line 389, in bind_with_trace
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/core.py", line 821, in process_primitive
    return primitive.impl(*tracers, **params)
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/lax/slicing.py", line 1166, in _slice_impl
    return dispatch.apply_primitive(dynamic_slice_p, x, *start_indices,
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/dispatch.py", line 118, in apply_primitive
    in_avals, in_shardings = util.unzip2([_arg_spec(a) for a in args])
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/dispatch.py", line 118, in <listcomp>
    in_avals, in_shardings = util.unzip2([_arg_spec(a) for a in args])
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/dispatch.py", line 89, in _arg_spec
    aval = xla.abstractify(x)
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/interpreters/xla.py", line 172, in abstractify
    if aval_fn: return aval_fn(x)
  File "/Users/clementine/miniconda3/envs/NPG-env/lib/python3.10/site-packages/jax/_src/interpreters/xla.py", line 183, in _make_abstract_python_scalar
    return ShapedArray((), dtypes._scalar_type_to_dtype(typ, val),
KeyboardInterrupt
